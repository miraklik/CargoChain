syntax = "proto3";
package freightchain.freightchain.v1;

import "amino/amino.proto";
import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "freightchain/freightchain/v1/params.proto";

option go_package = "FreightChain/x/freightchain/types";

// Msg defines the Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;
  rpc CreateShipment(MsgCreateShipment) returns (MsgCreateShipmentResponse);
  rpc UpdateShipment(MsgUpdateShipment) returns (MsgUpdateShipmentResponse);

  // UpdateParams defines a (governance) operation for updating the module
  // parameters. The authority defaults to the x/gov module account.
  rpc UpdateParams(MsgUpdateParams) returns (MsgUpdateParamsResponse);
}

message MsgCreateShipment {
  string creator = 1;
  string tracking_number = 2;
  string location = 3;
  string status = 4;
}

message MsgCreateShipmentResponse {}

message MsgUpdateShipment {
  string creator = 1;
  string tracking_number = 2;
  string location = 3;
  string status = 4;
}

message MsgUpdateShipmentResponse {}

// MsgUpdateParams is the Msg/UpdateParams request type.
message MsgUpdateParams {
  option (cosmos.msg.v1.signer) = "authority";
  option (amino.name) = "freightchain/x/freightchain/MsgUpdateParams";

  // authority is the address that controls the module (defaults to x/gov unless overwritten).
  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // params defines the module parameters to update.
  //
  // NOTE: All parameters must be supplied.
  Params params = 2 [
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true
  ];
}

message Shipment {
  string creator = 1;
  string tracking_number = 2;
  string status = 3;
  string location = 4;
  int64 timestamp = 5;
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
message MsgUpdateParamsResponse {}